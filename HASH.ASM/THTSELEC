***********************************************************************
* Description:                                                        *
* ________________________________________________________________    *
* THTSELEC RETURNS THE VALUE AND VALUE LENGTH IN THTCOMM AREA         *
* SETS @VALUE AND VALUEL.                                             *
* THE CALLER IS RESPONSIBLE FOR RELEASING THE STORAGE AFTER THEY ARE  *
* DONE WITH IT.                                                       *
* ________________________________________________________________    *
* ________________________________________________________________    *
* ________________________________________________________________    *
* Entry:___R1: @THTCOMM___________________________________________    *
* ________________________________________________________________    *
* Return:__R15: RC________________________________________________    *
* _________R1:  @THTCOMM__________________________________________    *
***********************************************************************
           TITLE    'THTSELEC SELECT RECORD FROM HASHTABLE'
           SYSSTATE ARCHLVL=2
THTSELEC   RSECT    ,                              REANTRANT
THTSELEC   AMODE    31
THTSELEC   RMODE    ANY
*********************************************************************** 
* REGISTER                                                              
*********************************************************************** 
R0         EQU      0
R1         EQU      1                              @THTCOMM             
R2         EQU      2                              @TBCB                
R3         EQU      3                              @BUCKET              
R4         EQU      4                              BUCKET INDEX         
R5         EQU      5                              BUCKET OFFSET        
R6         EQU      6                                                   
R7         EQU      7                                                   
R8         EQU      8                                                   
R9         EQU      9                                                   
R10        EQU      10                             @HTCB
R11        EQU      11                             @WORKAREA            
R12        EQU      12                             @THTSELEC            
R13        EQU      13                                                  
R14        EQU      14                             @BEGIN BUCKETAREA    
R15        EQU      15                             @END BUCKET AREA     
*********************************************************************** 
* ENTRY                                                                 
*********************************************************************** 
           BAKR     R14,0                          SAVE CALLER REGS
           LR       R12,R15                  R12:  @THTSELEC
           USING    THTSELEC,R12                   ADDRESS THTSELEC
***********************************************************************
* MAIN
***********************************************************************
           USING    THTCOMM,R1                     ADDRESS THTCOMM
           L        R2,@MAPAREA              R2:   @HTCB
*----------------------------------------------------------------------
*          TEST IF HTCB EXISITS
*----------------------------------------------------------------------
           LR       R10,R2                   R10:  @HTCB
           USING    THTHTCB,R10                    ADDRESS HTCB
           IILF     R15,THTEYE               R15:  'HTCB' EYE CATCHER
           L        R14,0(,R2)               R14:  EYE CATCHER
           CRJNE    R15,R14,ERROR01                IF NO HTCB, ERROR
*----------------------------------------------------------------------
*          TEST IF TABLE EXISTS
*----------------------------------------------------------------------
           LA       R2,THTHTCBL(,R2)         R2:   @VECTOR OF TBCB's
           USING    THTTBCB,R2                     ADDRESS TBCB
           ICM      R9,B'1111',THTTBLC       R9:   NUMBER OF TABLES
           JZ       ERROR02                        IF NO TBCB's, ERROR
*----------------------------------------------------------------------
*          SEARCH ALL TBCB FOR OUR TABLE
*----------------------------------------------------------------------
           LLC      R4,TBLNAMEL              R4:   LENGTH TABLE NAME
           IILF     R0,THTEYE2               R0:   'TBCB' EYE CATCHER
           L        R15,@TBLNAME             R15:  @TABLE NAME
SRCHTABLE  L        R14,0(,R2)               R14:  TBCB EYE CATCHER
           CRJNE    R0,R14,NEXTSLOT                IF NO TBCB,NEXT SLOT
           LLC      R5,THTTNAML              R5:   TBLNAME LEN OF TBCB
           CRJNE    R5,R4,NEXTTBCB                 IF NOT SAME LEN,NEXT
           AHI      R5,-1                    R5:   DECR. LENGTH FOR CLC
           EX       R5,TBLCLC                      FOUND OUR TBCB ?
           JE       CALCHASH                       YES, CONTINUE
NEXTTBCB   LA       R2,THTTBCBL(,R2)               NO, NEXT TBCB
           JCT      R9,SRCHTABLE                   CONTINUE WHILE TBCBs
           J        ERROR03                        TABLE NOT FOUND
NEXTSLOT   LA       R2,THTTBCBL(,R2)         R2:   @NEXT TBCB
           J        SRCHTABLE
*----------------------------------------------------------------------
*          CALC HASH AND BUCKET INDEX
*          WE USE THE HASH OF THE TABLE NAME AS
*          A SEED FOR THE HASH OF THE KEY
*          BECAUSE WE DON'T WANT GUARANTEED COLLISONS
*          ON THE SAME KEYS IN DIFFERENT TABLES
*
*          FIRST WE HASH USING A MODIFIED VERSION OF
*          GOOGLE'S MURMUR3 FUNCTION. IF WE GET A COLLISION
*          WE REHASH WITH THE DJB2 FUNCTION.
*          IF WE COLLIDE AGAIN WE USE LINEAR PROBING TO FIND
*          A FREE BUCKET.
*----------------------------------------------------------------------
CALCHASH   DS       0H
*----------------------------------------------------------------------
*          TEST IF WE HAVE USED BUCKETS IN THE TABLE
*----------------------------------------------------------------------
           L        R0,THTTNBUC              R0:   NUM BUCKETS IN TBL
           CIJE     R0,0,ERROR04                   IF 0 THEN ERROR
           L        R3,THTTHASH              R3:   HASH OF TABLE NAME
           ST       R3,TBLHASH                     SET IN THTCOMM
*----------------------------------------------------------------------
*          MURMUR3 HASH FUNCTION
*----------------------------------------------------------------------
           L        R15,@THTHASH2            R15:  @THTHASH2
           BALR     R14,R15                        CALC HASH FOR KEY
           J        COMPRESS                       CALC BUCKET INDEX
*----------------------------------------------------------------------
*          REHASH USING DJB2 FUNCTION
*----------------------------------------------------------------------
REHASH     DS       0H
           L        R15,@THTHASH3            R15:  @THTHASH3
           BALR     R14,R15                        CALC HASH FOR KEY
*----------------------------------------------------------------------
*          COMPRESS THE HASH TO A BUCKET INDEX
*          BY DIVIDING THE HASH WITH THE BUCKETS COUNT
*          AND USING THE REMINDER AS THE INDEX NUMBER
*          THE BUCKETS COUNT SHOULD BE A PRIME NUMBER
*----------------------------------------------------------------------
COMPRESS   DS       0H
           L        R5,KEYHASH               R5:   32BIT HASH KEY
           L        R6,THTBUCKC              R6    COUNT BUCKETS
           SR       R4,R4                    R4    BUCKET INDEX
           DLR      R4,R6                          HASH / COUNT BUCKETS
*----------------------------------------------------------------------
*          CALC OFFSET OF BUCKET IN BYTES
*----------------------------------------------------------------------
           L        R8,THTBSIZE              R8:   BUCKET SIZE
           LR       R7,R4                    R7:   MY BUCKET INDEX
           SR       R6,R6                          ZERO OUT FOR MLR
           MLR      R6,R8                    R7:   RBA OF MY BUCKET
           L        R14,@THTBUCK             R14   RBA BUCKET AREA
           LA       R14,0(R14,R10)           R14   @BUCKET AREA
           LA       R3,0(R7,R14)             R3:   @MY BUCKET
           RISBG    R3,R3,64,X'00'+31,32     R3H:  SAVE @MY BUCKET
           L        R15,@THTBUCKE            R15:  RBA LAST BUCKET
           LA       R15,0(R15,R10)           R15   @LAST BUCKET
           ALR      R15,R8                   R15:  @END SEARCH AREA
           RISBG    R15,R15,64,X'00'+31,32   R15H: SAVE @LAST BUCKET
*----------------------------------------------------------------------
*          TEST IF BUCKET IS USED
*----------------------------------------------------------------------
TESTBUCK   DS       0H
           USING    THTBUCK,R3                     ADDRESS THE BUCKET
           TM       THTUFLAG,THTFREE               IS FREE?
           JZ       ERROR05                        YES, THEN ERROR
           TM       THTUFLAG,THTDEL                IF DELETED
           JO       TESTBUCK1                      SKIP THIS BUCKET
           L        R4,THTTID                R4:   TABLE ID WE LOOK FOR
           LLC      R9,KEYL                  R9:   LEN KEY WE LOOK FOR
           L        R5,THTBTID               R5:   TBLID OF THIS BUCKET
           CRJNE    R4,R5,TESTBUCK1                NOT OUR TBL,CONTINUE
           LLC      R7,THTKEYL               R7:   LEN KEY OF THIS BUC.
           CRJNE    R9,R7,TESTBUCK1                IF NOT EQUAL CONT.
           AHI      R7,-1                    R7:   DECR. LENGTH FOR CLC
           L        R5,@KEY                  R5:   @KEY
           EX       R7,KEYCLC                      IS THIS OUR KEY ?
           JE       SELECT                         YES, THEN SELECT IT
TESTBUCK1  CIJE     R11,1,PROBING                  REHASH COLLISON ?
*----------------------------------------------------------------------
*          AFTER 1. COLLISION WE REHASH AND INDEX TO NEW BUCKET
*          BUT FIRST WE TEST IF THIS BUCKET CONTAINS OUR KEY+TABLE ID
*----------------------------------------------------------------------
           IILF     R11,1                          INDICATE COLLISION
           J        REHASH                         REHASH
*----------------------------------------------------------------------
*          AFTER 2. HASH COLLISION
*          WE NOW USE LINEAR PROBING TO FIND A FREE BUCKET
*          WE START AT THE INDEXED BUCKET AND SEARCH BACKWARDS
*          TOWARDS THE BEGINNING OF THE BUCKETS AREA
*          ONCE WE HIT THE FIRST BUCKET WE SET THE POINTER
*          TO THE LAST BUCKET AND SET THE
*          END POINTER TO THE INDEXED BUCKET WE STARTED AT
*          IF WE FIND AN EMPTY BUCKET WE USE IT AND IF WE ENCOUNTER
*          AN BUCKET WITH OUR TABLE ID AND KEY WE RETURN AN ERROR
*----------------------------------------------------------------------
PROBING    L        R4,THTTID                R4:   TABLE ID WE LOOK FOR
           LLC      R9,KEYL                  R8:   LEN KEY WE LOOK FOR
NEXTBUCK   CRJE     R3,R14,ATBEGIN                 WE ARE AT THE BEGIN
           CRJE     R3,R15,ERROR05                 IF AT END ERROR
           SLR      R3,R8                    R3:   @PREVIOUS BUCKET
           TM       THTUFLAG,THTFREE               IS EMPTY?
           JZ       ERROR05                        YES, THEN ERROR
           TM       THTUFLAG,THTDEL                IF DELETED
           JO       NEXTBUCK                       SKIP THIS BUCKET
           L        R5,THTBTID               R5:   TBLID OF THIS BUCKET
           CRJNE    R4,R5,NEXTBUCK                 GO ON IF NOT OUR TBL
           LLC      R7,THTKEYL               R7:   LEN KEY OF THIS BUC.
           CRJNE    R9,R7,NEXTBUCK                 IF NOT EQUAL GO NEXT
           AHI      R7,-1                    R7:   DECR. LENGTH FOR CLC
           L        R5,@KEY                  R5:   @KEY
           EX       R7,KEYCLC                      IS THIS OUR KEY ?
           JE       SELECT                         YES, KEY IN TABLE
           J        NEXTBUCK                       NO, CONTINUE SEARCH
ATBEGIN    RISBG    R3,R15,32,X'00'+0,32     R3:   START FROM BOTTOM
           RISBG    R15,R3,32,X'00'+0,32     R15:  @MY BUCKET = NEW END
           SR       R14,R14
           J        NEXTBUCK                       CONTINUE SEARCH
*----------------------------------------------------------------------
*          SELECT VALUE FROM BUCKET
*----------------------------------------------------------------------
SELECT     DS       0H
           DROP     R1                             DROP THTCOMM
           LR       R5,R1                    R5:   SAVE @THTCOMM
           USING    THTCOMM,R5                     ADDRESS THTCOMM
           LLC      R9,THTKEYL               R9:   KEY LENGTH
           L        R7,THTVALL               R7:   LENGTH VALUE
           ST       R7,VALUEL                      SET IN THTCOMM
           LA       R6,THTBUCKL(R9,R3)       R6:   @VALUE
           ST       R6,@VALUE                      SET IN THTCOMM
*----------------------------------------------------------------------
*          RETURN AN OBJECT OR AN STRUCTURE?
*----------------------------------------------------------------------
           IILF     R2,#ARRAYELL+#ARRAYL     R2:   LENGTH ARRAY+1 ELEM
           TM       THTRTYP,THTPRIME               RETURN POINTERS?
           JO       SELECT_END                     YES, WE'RE FINISHED
           TM       THTRTYP,THTOBJECT              RETURN AN OBJECT?
           JZ       STRUCT1                        NO, CONTINUE
           ALR      R2,R7                    R2.   YES, +LENGTH VALUE
STRUCT1    DS       0H
           STORAGE  OBTAIN,LOC=(31,31),LENGTH=(R2),BNDRY=DBLWD
*          LR       R0,R2                    R0:   SIZE ARRAY
           LR       R2,R1                    R2:   @ARRAY
           USING    #ARRAY,R2                      ADDRESS ARRAY
           ST       R0,#ARRAYSIZ                   SET SIZE ARRAY
           ST       R2,@THTRETURN                  SET PTR IN THTCOMM
           IILF     R0,1                     R0:   ONE ELEMENT IN ARRAY
           ST       R0,#ARRAYELMM                  SET NUMBER ELEMENTS
           ST       R0,#ARRAYELM                   SET NUMBER ELEMENTS
           LA       R0,#ARRAYL+#ARRAYELL(,R2) R0:  @AFTER ARRAY
           LA       R2,#ARRAYL(,R2)          R2:   @INDEX 0
           USING    #ARRAYEL,R2                    ADDRESS ELEMENT 0
           TM       THTRTYP,THTOBJECT              RETURN AN OBJECT?
           JZ       STRUCT2                        NO, CONTINUE
           LR       R1,R7                    R1:   LENGTH VALUE
           LR       R9,R0                    R9:   SAVE @VALUE
           LR       R8,R7                    R8:   SAVE LENGTH VALUE
           MVCL     R0,R6                          MV VALUE AFTER ARRAY
           LR       R6,R9                    R6:   @NEW VALUE
           LR       R7,R8                    R7:   RESTORE LENGTH
STRUCT2    ST       R7,#ARRAYELML                  SET LENGTH VALUE
           ST       R6,#ARRAYELM@                  SET PTR TO VALUE
SELECT_END SR       R15,R15                  R15:  RC=0
           LR       R1,R5                    R5:   RESTORE @THTCOMM
           DROP     R5                             DROP THTCOMM
***********************************************************************
* RETURN
***********************************************************************
EXIT01     DS       0H
           PR       ,
***********************************************************************
* ERRORS
***********************************************************************
*----------------------------------------------------------------------
*          NO HTCB FOUND, HASHTABLE MUST BE INIT
*----------------------------------------------------------------------
           USING    THTCOMM,R1
ERROR01    DS       0H
           IILF     R15,#NO_HTCB
           MVC      THTERRMSG(30),=C'HASHTABLE IS NOT INITIALIZED  '
           J        EXIT01
*----------------------------------------------------------------------
*          NO TABLES FOUND
*----------------------------------------------------------------------
ERROR02    DS       0H
           IILF     R15,#NO_TABLES
           MVC      THTERRMSG(30),=C'NO TABLES IN HASHTABLE        '
           J        EXIT01
*----------------------------------------------------------------------
*          TABLE NOT FOUND
*----------------------------------------------------------------------
ERROR03    DS       0H
           IILF     R15,#TABLE_NOT_FOUND
           MVC      THTERRMSG(30),=C'TABLE NOT FOUND               '
           J        EXIT01
*----------------------------------------------------------------------
*          TABLE IS EMPTY
*----------------------------------------------------------------------
ERROR04    DS       0H
           IILF     R15,#TABLE_IS_EMPTY
           MVC      THTERRMSG(30),=C'TABLE IS EMPTY                '
           J        EXIT01
*----------------------------------------------------------------------
*          KEY NOT  FOUND IN TABLE
*----------------------------------------------------------------------
ERROR05    DS       0H
           IILF     R15,#KEY_NOT_IN_TABLE
           MVC      THTERRMSG(30),=C'KEY NOT FOUND IN TABLE        '
           J        EXIT01
***********************************************************************
* CONSTANTS
***********************************************************************
           DS       0F
@THTHASH2  DC       V(THTHASH2)
@THTHASH3  DC       V(THTHASH3)
           USING    THTTBCB,R2
TBLCLC     CLC      THTTNAME(0),0(R15)
           DROP     R2
           USING    THTBUCK,R3
KEYCLC     CLC      THTKEYL+1(0),0(R5)
           DROP     R3
           LTORG    ,
***********************************************************************
* DSECTS
***********************************************************************
           THTCOMM  ,                              THT COMMAREA
           THTCBLKS ,                              THT CONTROL BLOCKS
           DATATYPE ,
           END      THTSELEC
